/*-------------------------------------------------------------------------------------------------*/
//File #1
/*-------------------------------------------------------------------------------------------------*/

#use TestLog\TestLog.ic
#use GlobalVariables\GlobalVariables.ic
#use MathFunctions\Arctan.ic
#use CourseFunctions\CourseInitialize.ic
#use EncoderFunctions\Encoders.ic
#use GPSFunctions\GPSModule.ic
#use DriveFunctions\Drive.ic
#use DriveFunctions\FromTo.ic
#use TaskFunctions\WaitForGo.ic
#use TaskFunctions\PushButton.ic
#use TaskFunctions\HangLight.ic



/*-------------------------------------------------------------------------------------------------*/
//Function #1
/*-------------------------------------------------------------------------------------------------*/

void main()
{
    //Declare course
    int course;
    int courseDirection;
    
    //Declare whether this course is being logged
    #ifdef TEST_LOG
      {
        ResetTestLog();
        StartLogging();
        LogEvent(111);
    }
    #endif
    
    //Select course using knob
    course = CourseInitializeKnob();
    
    //Determine the direction of the arrow on this course
    courseDirection = CourseDirectionInitialize(course);
    
    //Enable the encoders
    EncodersInitialize();
    
    //Connect to this course's GPS system
    GPSInitialize(course);
    
    //Enable the Handy Board GPS
    GPSEnable();
    
    //Get one valid reading from the GPS
    while(!GPSGetData());
    
    msleep(100L);
    while(!start_button())
      {
        printf("\nStart: Begin    Stop: Calibrate");
        msleep(100L);
        if(stop_button())
          CalibrateMotors();
    }
    
    //Wait for the go light on the CdS
    printf("\nWaiting for go");
    WaitForGo();
    
    //Get another valid reading from the GPS
    while(!GPSGetData());
    
    //Set the location of the objects on the course
    SetLocations(courseDirection);
    
    //Make sure the Robot knows which way it is looking
    Face();
    
    //Travel from start to traffic
    printf("\nFrom start to traffic");
    FromStartToTraffic(courseDirection);
    
    HangLight(courseDirection);
    
    //Travel from traffic to button
    //FromTrafficToButtonStart(courseDirection);
    
    //Attempt to push button
    //PushButton(courseDirection);
    
    //Travel from button to crank
    //FromButtonToCrank(courseDirection);
    
    //FromCrankToTopCenterRamp();
    
    //FromTopCenterRampToBottomCenterRamp();
    
    GetTo(topCenterRamp.x, topCenterRamp.y, 100.);
    TurnDegrees(-55);
    GetTo(bottomCenterRamp.x, bottomCenterRamp.y, 50.);
    
    #ifdef TEST_LOG
      {
        LogEvent(110);
    }
    #endif
}

/*-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------*/
