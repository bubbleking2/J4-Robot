/*-------------------------------------------------------------------------------------------------*/
//GPS Heading Test
/*-------------------------------------------------------------------------------------------------*/

#use GlobalVariables\GlobalVariables.ic
#use MathFunctions\Arctan.ic
#use CourseFunctions\CourseInitialize.ic
#use EncoderFunctions\Encoders.ic
#use GPSFunctions\GPSModule.ic
#use DriveFunctions\Drive.ic

/*-------------------------------------------------------------------------------------------------*/
//Function #1
/*-------------------------------------------------------------------------------------------------*/

void main()
{
    //Declare course
    int stopPressed = 0;
    int course;
    int courseDirection;
    int initialDirection = 1;
    int x = -90;
    int y = 160;
    int turn;
    
    //Select course using knob
    course = CourseInitializeKnob();
    
    //Determine the direction of the arrow on this course
    courseDirection = CourseDirectionInitialize(course);
    
    //Connect to this course's GPS system
    GPSInitialize(course);
    
    //Enable the Handy Board GPS
    GPSEnable();
    
    //Enable the encoders
    EncodersInitialize();
    
    //Get one valid reading from the GPS
    while(!GPSGetData());
    
    printf("\nPress Start to begin.");
    start_press();
    
    while(!stop_button())
      {
        GPSGetAbsoluteHeading();
        
        if(initialDirection)
          if(gps_y > y)
            turn = gps_heading + 180 + Arctan(gps_x - x, gps_y - y);
          else
            turn = gps_heading + Arctan(gps_x - x, gps_y - y);
        else
          {
            if(gps_y > y)
              turn = -gps_heading + 180 + Arctan(gps_x - x, gps_y - y);
            else
              turn = -gps_heading + Arctan(gps_x - x, gps_y - y);
        }
        
        if(turn > 180)
          turn = turn - 360;
        else if(turn < -180)
          turn = turn + 360;
        
        TurnDegrees(turn);
        printf("\nPress Start to  test again.");
        while(!start_button() && !(stopPressed = stop_button()));
    }
    
    printf("\nOperation Terminated");
    
}

/*-------------------------------------------------------------------------------------------------*/
/*-------------------------------------------------------------------------------------------------*/
