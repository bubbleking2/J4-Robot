/*=================================================================================================*\
|* FromTo.ic                                                                                       *|
|*-------------------------------------------------------------------------------------------------*|
|* File #7                                                                                         *|
|*-------------------------------------------------------------------------------------------------*|
|* Purpose: Contains functions that navigate the course.                                           *|
\*=================================================================================================*/

#ifdef DRIVE

/*=================================================================================================*\
|* Constants                                                                                       *|
|*-------------------------------------------------------------------------------------------------*|
|* FROM_TO | This constant's definition is proof that the file is being used.                      *|
\*=================================================================================================*/

#define FROM_TO 1

/*=================================================================================================*\
|* Functions                                                                                       *|
\*=================================================================================================*/

/*-------------------------------------------------------------------------------------------------*\
|* void FromStartToTraffic()                                                                       *|
|*-------------------------------------------------------------------------------------------------*|
|* Function #70                                                                                    *|
|*-------------------------------------------------------------------------------------------------*|
|* Purpose: Navigates from the start location to the traffic location.                             *|
\*-------------------------------------------------------------------------------------------------*/

void FromStartToTraffic()
{
    #ifdef TEST_LOG
      {
        LogEvent(701);
    }
    #endif
    
    DriveDistance(.25 * sqrt((float)((traffic.y - gps_y) * (traffic.y - gps_y) + (traffic.x - gps_x) * (traffic.x - gps_x))), 100.);
    
    #ifdef TEST_LOG
      {
        LogEvent(700);
    }
    #endif
}

/*-------------------------------------------------------------------------------------------------*\
|* void FromTrafficToButtonStart()                                                                 *|
|*-------------------------------------------------------------------------------------------------*|
|* Function #71                                                                                    *|
|*-------------------------------------------------------------------------------------------------*|
|* Purpose: Navigates from the start traffic location to a location near the upper button task.    *|
\*-------------------------------------------------------------------------------------------------*/

void FromTrafficToButtonStart()
{
    
    #ifdef TEST_LOG
      {
        LogEvent(711);
    }
    #endif
    
    GetTo(buttonStart.x, buttonStart.y, 100.);
    
    #ifdef TEST_LOG
      {
        LogEvent(710);
    }
    #endif
}

/*-------------------------------------------------------------------------------------------------*\
|* void FromButtonToCrank()                                                                        *|
|*-------------------------------------------------------------------------------------------------*|
|* Function #72                                                                                    *|
|*-------------------------------------------------------------------------------------------------*|
|* Purpose: Navigates from upper button location to the location of the crank task.                *|
\*-------------------------------------------------------------------------------------------------*/

void FromButtonToCrank()
{
    #ifdef TEST_LOG
      {
        LogEvent(721);
    }
    #endif
    
    TurnAgainst(topCenterRamp.x, topCenterRamp.y);
    GPSGetAbsolute();
    DriveDistance(.25 * sqrt((float)((topCenterRamp.y - gps_y) * (topCenterRamp.y - gps_y) + (topCenterRamp.x - gps_x) * (topCenterRamp.x - gps_x))), -100.);
    TurnAgainst(crankLineStart.x, crankLineStart.y);
    DriveDistance(.25 * sqrt((float)((crankLineStart.y - gps_y) * (crankLineStart.y - gps_y) + (crankLineStart.x - gps_x) * (crankLineStart.x - gps_x))), -100.);
    
    #ifdef TEST_LOG
      {
        LogEvent(720);
    }
    #endif
}

/*-------------------------------------------------------------------------------------------------*\
|* void CrankToStart()                                                                             *|
|*-------------------------------------------------------------------------------------------------*|
|* Function #73                                                                                    *|
|*-------------------------------------------------------------------------------------------------*|
|* Purpose: Navigates from the crank to the start location.                                        *|
\*-------------------------------------------------------------------------------------------------*/

void FromCrankToStart()
{
    #ifdef TEST_LOG
      {
        LogEvent(731);
    }
    #endif
    
    GetTo(topCenterRamp.x, topCenterRamp.y, 100.);
    GetTo(bottomCenterRamp.x, bottomCenterRamp.y, 50.);
    TurnDegrees(55);
    DriveDistance(3., -100.);
    facingLeft = 1;
    TurnAgainst(0,0);
    DriveDistance(24., -100.);
    
    #ifdef TEST_LOG
      {
        LogEvent(730);
    }
    #endif
}

/*=================================================================================================*\
|* END                                                                                             *|
\*=================================================================================================*/

#endif
