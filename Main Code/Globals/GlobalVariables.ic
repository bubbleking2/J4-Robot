/*=================================================================================================*\
|* GlobalVariables.ic                                                                              *|
|*-------------------------------------------------------------------------------------------------*|
|* File #1                                                                                         *|
|*-------------------------------------------------------------------------------------------------*|
|* Purpose: Contains global variables and macros that may be requried by other functions.          *|
\*=================================================================================================*/

/*=================================================================================================*\
|* Constants                                                                                       *|
|*-------------------------------------------------------------------------------------------------*|
|* GLOBAL_VARIABLES       | This constant's definition is proof that the file is being used.       *|
|*------------------------+------------------------------------------------------------------------*|
|* LEFT_MOTOR             | The left motor's header port.                                          *|
|*------------------------+------------------------------------------------------------------------*|
|* CRANK                  | The crank's header port.                                               *|
|*------------------------+------------------------------------------------------------------------*|
|* RIGHT_MOTOR            | The right motor's header port.                                         *|
|*------------------------+------------------------------------------------------------------------*|
|* LEFT_ENCODER           | The left shaft encoder's header port.                                  *|
|*------------------------+------------------------------------------------------------------------*|
|* RIGHT_ENCODER          | The right shaft encoder's header port.                                 *|
|*------------------------+------------------------------------------------------------------------*|
|* LEFT_OPTOSENSOR        | The left optosensor's header port.                                     *|
|*------------------------+------------------------------------------------------------------------*|
|* CENTER_OPTOSENSOR      | The center optosensor's header port.                                   *|
|*------------------------+------------------------------------------------------------------------*|
|* RIGHT_OPTOSENSOR       | The right optosensor's header port.                                    *|
|*------------------------+------------------------------------------------------------------------*|
|* FRONT_CDS_PORT         | The front CdS cell's header port.                                      *|
|*------------------------+------------------------------------------------------------------------*|
|* BACK_CDS_PORT          | The back CdS cell's header port.                                       *|
|*------------------------+------------------------------------------------------------------------*|
|* GPS                    | The GPS beacon's header port.                                          *|
|*------------------------+------------------------------------------------------------------------*|
|* LINE_FIND_SPEED        | The speed at which lines are driven towards.                           *|
|*------------------------+------------------------------------------------------------------------*|
|* LINE_FOLLOW_SPEED      | The speed at which to line follow.                                     *|
|*------------------------+------------------------------------------------------------------------*|
|* LINE_FOLLOW_THRESHOLD  | The minimum light reading which constitutes a line for line following. *|
|*------------------------+------------------------------------------------------------------------*|
|* TURN_SPEED             | The speed at which to turn.                                            *|
|*------------------------+------------------------------------------------------------------------*|
|* SLOW_SPEED             | The speed to drive at when slowing down.                               *|
|*------------------------+------------------------------------------------------------------------*|
|* trafficIsRight         | Renames the variable gps_traffic.                                      *|
\*=================================================================================================*/

#define GLOBAL_VARIABLES 1

/*-------------------------------------------------------------------------------------------------*\
|* Motor Ports                                                                                     *|
\*-------------------------------------------------------------------------------------------------*/

#define LEFT_MOTOR 1
#define CRANK 2
#define RIGHT_MOTOR 3

/*-------------------------------------------------------------------------------------------------*\
|* Analog Ports                                                                                    *|
\*-------------------------------------------------------------------------------------------------*/

//#define LEFT_ENCODER 2
//#define RIGHT_ENCODER 3
#define LEFT_OPTOSENSOR 4
#define CENTER_OPTOSENSOR 5
#define RIGHT_OPTOSENSOR 6
#define FRONT_CDS_PORT 16
#define BACK_CDS_PORT 17

/*-------------------------------------------------------------------------------------------------*\
|* Servo Ports                                                                                     *|
\*-------------------------------------------------------------------------------------------------*/

//#define GPS 4

/*-------------------------------------------------------------------------------------------------*\
|* Variable Constants                                                                              *|
\*-------------------------------------------------------------------------------------------------*/

#define LINE_FIND_SPEED 45
#define LINE_FOLLOW_SPEED 45
#define LINE_FOLLOW_THRESHOLD 140
#define TURN_SPEED 35
#define SLOW_SPEED 35.

/*-------------------------------------------------------------------------------------------------*\
|* Redefined Variables                                                                             *|
\*-------------------------------------------------------------------------------------------------*/

//#define trafficIsRight gps_traffic;

/*=================================================================================================*\
|* Macros                                                                                          *|
\*=================================================================================================*/

/*-------------------------------------------------------------------------------------------------*\
|* RunWhile(process, conditions)                                                                   *|
|*-------------------------------------------------------------------------------------------------*|
|* Purpose: Runs a specificied function until conditions are met.                                  *|
|*-------------------------------------------------------------------------------------------------*|
|* Arguments                                                                                       *|
|*-------------------------------------------------------------------------------------------------*|
|* process    | The process to be run.                                                             *|
|*------------+------------------------------------------------------------------------------------*|
|* conditions | The conditions which will terminate the process when satisfied.                    *|
\*-------------------------------------------------------------------------------------------------*/

#define RunWhile(process, conditions) processID=start_process(process);while(conditions);kill_process(processID);ao();

/*-------------------------------------------------------------------------------------------------*\
|* RunFor(process, time)                                                                           *|
|*-------------------------------------------------------------------------------------------------*|
|* Purpose: Runs a specificied function for a specified amount of time.                            *|
|*-------------------------------------------------------------------------------------------------*|
|* Arguments                                                                                       *|
|*-------------------------------------------------------------------------------------------------*|
|* process   | The process to be run.                                                              *|
|*-----------+-------------------------------------------------------------------------------------*|
|* long time | The amount of time, in milliseconds, to run the function.                           *|
\*-------------------------------------------------------------------------------------------------*/

#define RunFor(process, time) processID=start_process(process);msleep(time);kill_process(processID);ao();

/*-------------------------------------------------------------------------------------------------*\
|* RunWhileFor(process, conditions, time)                                                          *|
|*-------------------------------------------------------------------------------------------------*|
|* Purpose: Runs a specificied function until conditions are met or for a specified amount of time.*|
|*-------------------------------------------------------------------------------------------------*|
|* Arguments                                                                                       *|
|*-------------------------------------------------------------------------------------------------*|
|* process    | The process to be run.                                                             *|
|*------------+------------------------------------------------------------------------------------*|
|* conditions | The conditions which will terminate the process when satisfied.                    *|
|*------------+------------------------------------------------------------------------------------*|
|* long time  | The amount of time, in milliseconds, to run the function.                          *|
\*-------------------------------------------------------------------------------------------------*/

#define RunWhileFor(process, conditions, long time) time+=mseconds();processID=start_process(process);while(conditions&&mseconds()<time);kill_process(processID);ao();

/*=================================================================================================*\
|* Global Variables                                                                                *|
|*-------------------------------------------------------------------------------------------------*|
|* start            | The (x, y) location of the start position.                                   *|
|*------------------+------------------------------------------------------------------------------*|
|* traffic          | The (x, y) location of the center of the traffic lights                      *|
|*------------------+------------------------------------------------------------------------------*|
|* trafficLeft      | The (x, y) location of the left traffic pole.                                *|
|*------------------+------------------------------------------------------------------------------*|
|* buttonStart      | The (x, y) location to obtain before attempting to press the top button.     *|
|*------------------+------------------------------------------------------------------------------*|
|* topCenterRamp    | The (x, y) location of an area centered directly above the ramp.             *|
|*------------------+------------------------------------------------------------------------------*|
|* bottomCenterRamp | The (x, y) location of an area centered directly below the ramp.             *|
|*------------------+------------------------------------------------------------------------------*|
|* crankLineStart   | The (x, y) location of the start of the line before the crank.               *|
|*------------------+------------------------------------------------------------------------------*|
|* crankLine        | The (x, y) location of the center of the line before the crank.              *|
|*------------------+------------------------------------------------------------------------------*|
|* rightGarbageCan  | The (x, y) location of the right garbage can.                                *|
|*------------------+------------------------------------------------------------------------------*|
|* processID        | The ID of a currently running secondary process.                             *|
\*=================================================================================================*/

struct Location{
    int x;
    int y;
}
start = {0, 24},
traffic = {0, 195},
trafficLeft = {-15, 215},
buttonStart = {-48, 185},
button = {-97, 161},
topCenterRamp = {0,178},
bottomCenterRamp = {0, 80},
crankLineStart = {50, 174},
crankLine = {70, 172},
rightGarbageCan = {75, 10};

int processID;

/*=================================================================================================*\
|* Functions                                                                                       *|
\*=================================================================================================*/

/*-------------------------------------------------------------------------------------------------*\
|* void SetLocations(int courseDirection, int trafficIsRight)                                      *|
|*-------------------------------------------------------------------------------------------------*|
|* Function #10                                                                                    *|
|*-------------------------------------------------------------------------------------------------*|
|* Purpose: This function sets all of the variables dealing with the locations of points on the    *|
|* course depending on whether it is left or right oriented.                                       *|
|*-------------------------------------------------------------------------------------------------*|
|* Arguments                                                                                       *|
|*-------------------------------------------------------------------------------------------------*|
|* int courseDirection | The left/right orientation of the course. -1 is left, 1 is right.         *|
|*---------------------+---------------------------------------------------------------------------*|
|* int trafficIsRight  | The orientation of the missing traffic light. 0 is left, 1 is right.      *|
\*-------------------------------------------------------------------------------------------------*/

void SetLocations(int courseDirection, int trafficIsRight)
{
    #ifdef TEST_LOG
      {
        LogEvent(101);
    }
    #endif
    
    start.x *= courseDirection;
    traffic.x *= courseDirection;
    buttonStart.x *= courseDirection;
    button.x *= courseDirection;
    topCenterRamp.x *= courseDirection;
    bottomCenterRamp.x *= courseDirection;
    crankLineStart.x *= courseDirection;
    crankLine.x *= courseDirection;
    
    if(trafficIsRight)
      trafficLeft.x *= -1;
    
    #ifdef TEST_LOG
      {
        LogEvent(100);
    }
    #endif
}

/*=================================================================================================*\
|* END                                                                                             *|
\*=================================================================================================*/
